# -*- coding: utf-8 -*-
"""Advanced Machine Learning/Project-1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1l6yVaIkbqMkAjOS3xylgfTvHTjqfeLut
"""

# !pip install libsvm
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from libsvm.svmutil import *
from libsvm import *
df = pd.read_csv("../datasets/zoo.csv")
class_name = pd.read_csv('../datasets/class.csv')

class_name.head()

df.head()

df.info()

df.describe()

print('Số lượng lớp: ')
df['class_type'].unique()

# Các thuộc tính có giá trị đa phần là nhị phân, chỉ có leg là khác biệt
df.legs.unique()

# Có động vật 5 chân?
df[df['legs']==5]

sns.factorplot('class_type', data=df,kind="count", aspect=2)

# Sự tương quan giữa thuộc tính và một số loài nhất định(đặc trưng của một số loài)
for i in df.columns[1:-1]:
  plt.figure(figsize=(12, 6))
  plt.title('Atrributes %s' %i)
  sns.countplot(df[i], hue=df['class_type'])

# Biểu đồ nhiệt thể hiện sự liên quan giữa các thuộc tính
plt.subplots(figsize=(20,15))
ax = plt.axes()
ax.set_title("Correlation Heatmap")
corr = df.corr()
sns.heatmap(corr, annot=True,
            xticklabels=corr.columns.values,
            yticklabels=corr.columns.values)

X = df.iloc[:, 1:17]
y = df.iloc[:, 17: 18]

# Chuyển df về matrix
data = X.to_numpy()
# Chuyền về vector hàng
label = y.to_numpy().reshape(-1)

kernel_name = {
    0: 'linear',
    1: 'polynomial',
    2: 'radial basis',
    3: 'sigmoid'
}

# Dữ liệu cho việc training
problem = svm_problem(label, data)
for i in range(0, 4):
  print("######---Kernel: %s---#####" %(kernel_name[i]))
  for j in range(0 ,10):
    print('Cost: %i' %(10**j))
    #parameter truyền vào để train model
    parameter = svm_parameter("-s {svm_type} -t {kernel_type} -c {cost} -v 100"
    .format(svm_type=0, kernel_type=i, cost=10**j))
    m = svm_train(problem, parameter)

# Training model với kernel linear và c 10
model = svm_train(problem, "-s 0 -t 0 -c 10 -b 1")

# Lưu model
svm_save_model('libsvm.model', model)
print(model.get_labels())